""" editing, general
"
"
set nocp  " for cpp omnicomplete
set formatoptions=croq " ins comm leader, fmt comm
"set formatoptions=c " ins comm leader, fmt comm
"set autoindent
set shiftwidth=4
set softtabstop=4
set expandtab
set textwidth=80
set number
set showtabline=1
syntax on
set autochdir
set wildmode=longest,list,full

set list

if &term == 'linux'
    set lcs=tab:│\ ,trail:·,extends:→,precedes:←,nbsp:&
else
    set lcs=tab:│\ ,trail:·,extends:→,precedes:←,nbsp:&
    nnoremap <silent> <F4> :call system("terminator >/dev/null 2>&1 & disown $!")<CR>
endif

set sessionoptions=blank,buffers,curdir,folds,help,tabpages,winsize

set ignorecase
set smartcase
set hlsearch

if has('gui_running')
    colorscheme pyte
    "colorscheme morning
    "set cursorline
else
    colorscheme desert
endif


""" copy and paste
"
vnoremap <C-Del> "+y
inoremap <C-Ins> <Esc>"+p`]a
nnoremap <C-Ins> "+P`]


""" GVim
"
set guifont=Monospace\ 9
set guioptions=faigrLme


""" Session
"
"set sessionoptions="buffers,sesdir,folds,localoptions,tabpages,winsize,winpos"


""" filetype specific
"
" per-file options
set modeline

filetype on
filetype indent on
filetype plugin on

source $VIMRUNTIME/macros/matchit.vim


""" LaTeX
"
" filetype of *.tex files is latex
let g:tex_flavor='latex'

autocmd FileType tex,latex setlocal shiftwidth=2 sts=2 et
autocmd FileType tex,latex setlocal formatoptions-=t

" options controlling latex-suite
autocmd FileType tex,latex setlocal grepprg=grep\ -nH\ $*

" format produced and viewers
let g:Tex_DefaultTargetFormat = 'pdf'
" let g:Tex_ViewRule_pdf = 'xdg-open out/$*.pdf'
let g:Tex_ViewRuleComplete_pdf = 'xdg-open out/$*.pdf &'
let g:Tex_ViewRule_ps = 'xdg-open'
let g:Tex_ViewRule_dvi = 'xdg-open'

let g:Tex_CompileRule_pdf = 'pdflatex -output-directory=out -interaction=nonstopmode -halt-on-error $*'
let g:Tex_GotoError = 0

" german quotes
let g:Tex_SmartKeyQuote = 0
"let g:Tex_SmartQuoteOpen = "\"`"
"let g:Tex_SmartQuoteClose = "\"'"

" disable shift-F1...F4 hotkey mappings
let g:Tex_HotKeyMappings = ""
let g:Tex_Menus = 0
"let g:Tex_PackagesMenu = 1

" customize folding
let g:Tex_FoldedSections = 'part,chapter,%%fakesection'
let g:Tex_FoldedEnvironments = ''
"let g:Tex_FoldedCommands = ''
let g:Tex_FoldedMisc = '<<<'

" workaround longtable environment behaving badly
let g:Tex_Env_longtable = "\\begin{longtable}{<+format+>}\r<++>\r\\end{longtable}"

" workaround some bug
"let g:Tex_package_detected = ''
"
""" LaTeX end


""" c, c++
"
let g:C_LoadMenus = "false"
"autocmd FileType c,cpp setlocal cindent


""" GNU Octave
"
augroup filetypedetect
  au! BufRead,BufNewFile *.m,*.oct setlocal filetype=matlab
augroup END 


""" Gnuplot
"
autocmd! BufRead,BufNewFile *.plot setlocal filetype=gnuplot


""" tagbar plugin
autocmd Filetype c,cpp,python,javascript nnoremap <silent><buffer> <F9> :TagbarToggle<CR>
let g:tagbar_singleclick = 1


""" omnicppcomplete
" set nocp --> start of rc file
inoremap <expr> <C-Space> "\<lt>C-X>\<lt>C-O>"
nnoremap <C-F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
"nnoremap <C-F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+ql .<CR>
let OmniCpp_ShowPrototypeInAbbr = 1
let OmniCpp_SelectFirstItem = 2
let OmniCpp_LocalSearchDecl = 1
set completeopt=menu,menuone,preview
set cinoptions={.5s
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

